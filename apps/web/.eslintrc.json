{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": [
      "tsconfig.json"
    ],
    "createDefaultProgram": true
  },
  "plugins": [
    "@typescript-eslint",
    "prettier"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@next/next/recommended",
    "next/core-web-vitals",
    "prettier"
  ],
  "rules": {
    "@typescript-eslint/no-unused-vars": 2,
    "@typescript-eslint/no-explicit-any": 2,
    "id-length": [
      2,
      {
        "exceptions": [
          "i"
        ]
      }
    ],
    "@typescript-eslint/naming-convention": [
      2,
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      },
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE"
        ]
      },
      {
        "selector": "typeParameter",
        "format": [
          "PascalCase"
        ],
        "prefix": [
          "T"
        ]
      },
      {
        "selector": "variable",
        "format": [
          "PascalCase"
        ],
        "types": [
          "boolean"
        ],
        "prefix": [
          "is",
          "should",
          "has",
          "can",
          "did",
          "will",
          "was"
        ]
      },
      {
        "selector": "enum",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": "enumMember",
        "format": [
          "PascalCase",
          "camelCase"
        ]
      }
    ],
    "line-comment-position": [
      2,
      {
        "position": "above"
      }
    ]
  }
}